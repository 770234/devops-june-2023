ls -l --> WD
git ls-files --> Whether the files are being tracked or not - File location (SA/LR)
git status --> To confirm whether the files are in SA or LR




Commands:
root@ip-172-31-43-101:~/devops-june-2023# history
    1  apt update -y
    2  clear
    3  git version
    4  git clone https://github.com/raushan8586/devops-repo-sample.git
    5  ls -l
    6  cd devops-repo-sample/
    7  ls -l
    8  clear
    9  ls -l
   10  cd ..
   11  ls -l
   12  mkdir devops-june-2023
   13  ls -l
   14  cd devops-repo-sample/
   15  ls -la
   16  cd ../devops-june-2023/
   17  ls -la
   18  git init
   19  git branch
   20  touch sample1.txt
   21  vi sample1.txt
   22  cat sample1.txt
   23  ls -l
   24  ls
   25  pwd
   26  ls -l
   27  ls -la
   28  git status
   29  git add sample1.txt
   30  git status
   31  ls -l
   32  git ls-files
   33  git status
   34  git commit -m "1st commit"
   35  ls -l
   36  git ls-files
   37  git status
   38  clear
   39  ls -l
   40  git status
   41  git branch
   42  git log
   43  git show 0b66b38f0c838d3c7313f0b81db2deeaf86187eb
   44  git log --oneline
   45  touch sample2.txt
   46  vi sample2.txt
   47  git add .
   48  ls -l
   49  git ls-files
   50  git status
   51  git commit -m "2nd commit"
   52  git log --oneline
   53  ls -l
   54  git ls-files
   55  git status
   56  git log --oneline
   57  git show f891c0b
   58  git remote -v
   59  git remote add origin https://github.com/raushan8586/devops-june-repo.git
   60  git remote -v
   61  git push origin master
   62  history
   
   git config --list
   34  git config --global user.name "raushan"
   35  git config --list
   36  git config --global user.email "raushan8586.kumar@gmail.com"
   37  git config --list
   38  vi sample4.txt
   
   git diff sample3.txt
   56  git add sample3.txt
   57  git diff sample3.txt
   58  git diff --staged sample3.txt
   
   
   git branch b1 master
   68  git branch
   69  git checkout b1
   70  git branch
   71  git log --oneline
   72  git branch b2 master
   73  git checkout b2
   74  git log --oneline
   75  history
   
   
   vi sample4.txt
   80  git diff sample4.txt
   81  git status
   82  git restore sample4.txt
   83  git status
   84  vi sample4.txt
   85  clear
   86  git branch
   87  git log --oneline
   88  git checkout b1
   89  git branch
   90  git log --oneline
   91  ls -l
   92  vi b1_file1
   93  git status
   94  git add .
   95  git commit -m "b1_1st_commit"
   96  git log --oneline
   97  git push origin b1
   98  git branch c1 b1
   99  git branch
  100  git push origin c1
  101  git checkout c1
  102  git status
  103  git log --oneline
  104  git branch
  105  git checkout b1
  106  git checkout master
  107  git merge b1 master
  108  git log --oneline
  109  git checkout b2
  110  git branch
  111  git log --oneline
  112  git rebase master
  113  git log --oneline
  114  git log --graph --pretty=oneline
  115  git checkout master
  116  git branch
  117  ls -l
  118  vi sample5.txt
  119  git add .
  120* git commit -m "8th comm
  121  git log --oneline
  122  git checkout b2
  123  vi b2_demo1
  124  git add .
  125  git commit -m "b2_1st_commit"
  126  git log --oneline
  127  git log --graph --pretty=oneline
  128  git rebase master
  129  git log --graph --pretty=oneline
  130  git checkout master
  131  git branch
  132  vi test.txt
  133  git add .
  134  git commit -m "test-file-updated-master"
  135  git checkout b2
  136  vi test.txt
  137  git add .
  138  got commit -m "test-file-updated-b2"
  139  git commit -m "test-file-updated-b2"
  140  git log --oneline
  141  git checkout master
  142  git merge b2 master
  143  vi test.txt
  144  git status
  145  git add .
  146  git status
  147  git commit -m "test-file-updated-master-b2"
  148  git status
  149  git log --graph --pretty=oneline
